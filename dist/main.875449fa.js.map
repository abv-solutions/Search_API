{"version":3,"sources":["js/reddit_api.js","js/main.js"],"names":["search","searchTerm","sortBy","searchLimit","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","querySelector","searchInput","showAlert","message","className","div","createElement","appendChild","createTextNode","before","setTimeout","remove","truncateText","text","limit","endIndex","indexOf","substring","addEventListener","e","preventDefault","value","results","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,OAAQ,SAASC,EAAYC,EAAQC,GAC5BC,OAAAA,MACmCH,wCAAAA,OAAAA,EAAmBC,UAAAA,OAAAA,EAAgBC,WAAAA,OAAAA,IAE1EE,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAAAG,GAAQA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAAF,GAAQA,OAAAA,EAAKA,SACjDG,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,OAPjB,QAAA,QAAA;;AC0Dd,aA1DD,IAAA,EAAA,EAAA,QAAA,iBA0DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxDD,IAAMG,EAAaC,SAASC,cAAc,gBACpCC,EAAcF,SAASC,cAAc,iBACrCjB,EAASgB,SAASC,cAAc,WAwCtC,SAASE,EAAUC,EAASC,GACpBC,IAAAA,EAAMN,SAASO,cAAc,OACnCD,EAAID,UAA2BA,eAAAA,OAAAA,GAC/BC,EAAIE,YAAYR,SAASS,eAAeL,IACxCpB,EAAO0B,OAAOJ,GACdK,WAAW,WAAMX,OAAAA,SAASC,cAAc,UAAUW,UAAU,KAG9D,SAASC,EAAaC,EAAMC,GACpBC,IAAAA,EAAWF,EAAKG,QAAQ,IAAKF,GAC/BC,OAAa,GAAbA,EACKF,EAEFA,EAAKI,UAAU,EAAGF,GAnD3BjB,EAAWoB,iBAAiB,SAAU,SAAAC,GACpCA,EAAEC,iBACIpC,IAAAA,EAAaiB,EAAYoB,MACzBpC,EAASc,SAASC,cAAc,gCAAgCqB,MAChEnC,EAAca,SAASC,cAAc,UAAUqB,MAClC,KAAfrC,GACFkB,EAAU,+BAAgC,UAE5CD,EAAYoB,MAAQ,GACbtC,EAAAA,QAAAA,OAAOC,EAAYC,EAAQC,GAAaE,KAAK,SAAAkC,GAC9CC,IAAAA,EAAS,6BACbD,EAAQE,QAAQ,SAAAC,GACVC,IAAAA,EAAQD,EAAKE,QACbF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,sEACJP,GAEqCG,+EAAAA,OAAAA,EAENd,mGAAAA,OAAAA,EAAaa,EAAKM,MAAO,KAC3BnB,4CAAAA,OAAAA,EAAaa,EAAKO,SAAU,KAEjDP,+BAAAA,OAAAA,EAAKK,IAILL,uIAAAA,OAAAA,EAAKQ,UAEiCR,+DAAAA,OAAAA,EAAKS,MAbnD,yDAkBFX,GAAU,SACVxB,SAASC,cAAc,YAAYmC,UAAYZ","file":"main.875449fa.js","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function(searchTerm, sortBy, searchLimit) {\r\n    return fetch(\r\n      `https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => data.data.children.map(data => data.data))\r\n      .catch(err => console.log(err));\r\n  }\r\n};\r\n","import reddit from \"./reddit_api\";\r\n\r\nconst searchForm = document.querySelector(\"#search-form\");\r\nconst searchInput = document.querySelector(\"#search-input\");\r\nconst search = document.querySelector(\"#search\");\r\n\r\nsearchForm.addEventListener(\"submit\", e => {\r\n  e.preventDefault();\r\n  const searchTerm = searchInput.value;\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  const searchLimit = document.querySelector(\"#limit\").value;\r\n  if (searchTerm === \"\") {\r\n    showAlert(\"Please type in a search term\", \"danger\");\r\n  }\r\n  searchInput.value = \"\";\r\n  reddit.search(searchTerm, sortBy, searchLimit).then(results => {\r\n    let output = '<div class=\"card-columns\">';\r\n    results.forEach(post => {\r\n      let image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\r\n      output += `\r\n        <div class=\"card mb-2\">\r\n          <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">${truncateText(post.title, 100)}</h5>\r\n            <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n            <a href=\"${\r\n              post.url\r\n            }\" target=\"_blank\" class=\"btn btn-dark\">Read More</a>\r\n            <hr>\r\n            <span class=\"badge badge-secondary\">Subreddit: ${\r\n              post.subreddit\r\n            }</span>\r\n            <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n          </div>\r\n        </div>\r\n        `;\r\n    });\r\n    output += \"</div>\";\r\n    document.querySelector(\"#results\").innerHTML = output;\r\n  });\r\n});\r\n\r\nfunction showAlert(message, className) {\r\n  const div = document.createElement(\"div\");\r\n  div.className = `alert alert-${className}`;\r\n  div.appendChild(document.createTextNode(message));\r\n  search.before(div);\r\n  setTimeout(() => document.querySelector(\".alert\").remove(), 2000);\r\n}\r\n\r\nfunction truncateText(text, limit) {\r\n  const endIndex = text.indexOf(\" \", limit);\r\n  if (endIndex == -1) {\r\n    return text;\r\n  }\r\n  return text.substring(0, endIndex);\r\n}\r\n"]}